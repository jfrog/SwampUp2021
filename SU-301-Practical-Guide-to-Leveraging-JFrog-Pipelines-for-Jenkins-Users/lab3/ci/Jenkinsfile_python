pipeline {
    agent {
        kubernetes {
            yaml """\
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                some-label: some-label-value
            spec:
              containers:
              - name: python
                image: python:3.9.5-alpine3.13
                command:
                - cat
                tty: true
              - name: docker
                image: docker:20.10.6-dind
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              volumes:
                - name: docker-sock
                  hostPath:
                    path: /var/run/docker.sock
            """.stripIndent()
        }
    }

    environment {
        ARTY_CREDS=credentials('jenkins_rt')
        ART_ID="artifactory-eu"
        JAVA_HOME = '/usr/lib/jvm/java-1.8-openjdk/'
        MAVEN_HOME = '/usr/share/maven'
    }

    parameters {
        string(name: 'YOUR_NAME', defaultValue: 'james', description: 'will be injected in the config.yaml')

        string(name: 'MY_GIT_URL', defaultValue: 'https://github.com/jfrog/Swampup2021.git', description: '')
        string(name: 'MY_GIT_BRANCH', defaultValue: 'main', description: '')
        string(name: 'TRAINING_PATH', defaultValue: 'SU-301-Practical-Guide-to-Leveraging-JFrog-Pipelines-for-Jenkins-Users', description: '')
        string(name: 'NEW_VERSION', defaultValue: '1.0.0', description: '')
        string(name: 'NEW_MSG', defaultValue: 'Welcome to Swampup 2021', description: '')

        string(name: 'JPD_URL', defaultValue: 'swampup301.jfrog.io', description: '')
        string(name: 'PYTHON_REPO', defaultValue: 'urs-python', description: '')
        string(name: 'GENERIC_REPO', defaultValue: 'urs-generic', description: '')
        string(name: 'DOCKER_REPO', defaultValue: 'urs-docker', description: '')
        
        string(name: 'WEBHOOK_PASS', defaultValue: 'yourpass', description: '')
        string(name: 'WEBHOOK_URL', defaultValue: 'https://swampup301-pipelines-api.jfrog.io/v1/projectIntegrations/57/hook', description: '')

        booleanParam(name: 'PYTHON_BUILD', defaultValue: true, description: 'Enable Python Build')
        booleanParam(name: 'DOCKER_BUILD', defaultValue: true, description: 'Enable Docker Build')
    }
    
    stages {
        stage ('Python Build') {
            when {
                expression {
                    params.PYTHON_BUILD
                }
            }
            steps {
                container('python') {

                    git branch: params.MY_GIT_BRANCH , url: params.MY_GIT_URL

                    dir (params.TRAINING_PATH) {
                    
                        sh """
                            ls -l 
                            sed -i "s|yann|${params.YOUR_NAME}|" src/python/config.yaml

                            cat src/python/config.yaml
                            cat src/python/requirements.txt
                            
                            apk add curl openjdk11

                        """

                        rtServer (
                            id: env.ART_ID,
                            url: "https://${params.JPD_URL}/artifactory",
                            credentialsId: 'jenkins_rt'
                        )
                
                        rtBuildInfo (
                            captureEnv: true,
                            excludeEnvPatterns: ['*private*', 'internal-*', 'ADM*'], 
                            buildName: 'jenkins-python',
                            buildNumber: env.BUILD_NUMBER
                        )
    
                        rtPipResolver (
                            id: 'ART_RESOLVER',
                            serverId: env.ART_ID,
                            repo: params.PYTHON_REPO
                        )
    
                        rtPipInstall (
                            resolverId: "ART_RESOLVER",
                            args: "-r src/python/requirements.txt",
                            module: 'dependencies',
                            buildName: 'jenkins-python',
                            buildNumber: env.BUILD_NUMBER

                        )
    
                        sh """
                            ls -l 
                            pwd
                            tar -czvf webapp-${params.NEW_VERSION}.tar.gz src/python/
                            ls -l 

                        """
                        
                        rtUpload (
                            serverId: env.ART_ID,
                            spec: """{
                                  \"files\": [
                                    {
                                      \"pattern\": \"webapp-${params.NEW_VERSION}.tar.gz\",
                                      \"target\": \"${params.GENERIC_REPO}\",
                                      \"flat\": \"true\"
                                      
                                    }
                                  ]
                            }""",
                            module: 'webapp',
                            buildName: 'jenkins-python',
                            buildNumber: env.BUILD_NUMBER
                        )
                        

                        rtPublishBuildInfo (
                            serverId: env.ART_ID,
                            buildName: 'jenkins-python',
                            buildNumber: env.BUILD_NUMBER
                        )
                    }
                }
            }
        }
        
        stage ('Docker Build & Push') {
            when {
                expression {
                    params.DOCKER_BUILD
                }
            }
            steps {
                container('docker') {

                    rtServer (
                        id: env.ART_ID,
                        url: "https://${params.JPD_URL}/artifactory",
                        credentialsId: 'jenkins_rt'
                    )

                    rtBuildInfo (
                        captureEnv: true,
                        excludeEnvPatterns: ['*private*', 'internal-*', 'ADM*'],
                        buildName: 'jenkins-python-docker',
                        buildNumber: env.BUILD_NUMBER
                    )
                    
                    rtDownload (
                        serverId: env.ART_ID,
                        spec: """{
                              "files": [
                                {
                                  \"pattern\": \"${params.GENERIC_REPO}/webapp-${params.NEW_VERSION}.tar.gz\",
                                  \"target\": \"webapp_python.tar.gz\",
                                  \"flat\": \"true\"
                                  
                                }
                              ]
                        }""",
                        module: 'webapp',
                        buildName: 'jenkins-python-docker',
                        buildNumber: env.BUILD_NUMBER
                    )
                    
                    sh """
                        apk add curl openjdk11
                        cat /etc/resolv.conf
                        curl -O https://raw.githubusercontent.com/jfrog/SwampUp2021/main/${params.TRAINING_PATH}/lab2/python/Dockerfile
                        docker login -u ${ARTY_CREDS_USR} -p ${ARTY_CREDS_PSW} ${params.JPD_URL}
                        docker build --network=host -t ${params.JPD_URL}/${params.DOCKER_REPO}/jenkins-python-webapp:${params.NEW_VERSION} .
                    """
                
                    rtDockerPush(
                        serverId: env.ART_ID,
                        image: "${params.JPD_URL}/${params.DOCKER_REPO}/jenkins-python-webapp:${params.NEW_VERSION}",
                        targetRepo: 'urs-docker-dev-local',
                        properties: 'project-name=uranus;status=stable',
                        // If the build name and build number are not set here, the current job name and number will be used:
                        buildName: 'jenkins-python-docker',
                        buildNumber: env.BUILD_NUMBER
                    )
 
                    rtPublishBuildInfo (
                        serverId: env.ART_ID,
                        buildName: 'jenkins-python-docker',
                        buildNumber: env.BUILD_NUMBER
                    )
                }
            } // end steps
        } // end stage
           
        stage('Call to JFrog Pipelines') {
            steps {
                sh """
                    curl -H "Accept: application/json" -H "Content-Type: application/json" -XPOST -H "authorization: ${params.WEBHOOK_PASS}"  ${params.WEBHOOK_URL}  --data-binary @- <<DATA
{
  "image_name": "${params.JPD_URL}/${params.DOCKER_REPO}/jenkins-python-webapp",
  "image_tag": "2.0.0"
}
DATA
                 """
            } // end steps
        } // end stage 
    }
}